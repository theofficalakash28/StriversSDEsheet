class Solution {
public:
    int recur(int n,int m,vector<vector<int>>& grid){ 
        
        vector<vector<int>>dp(n+1,vector<int>(m+1,INT_MIN));
        
        dp[n-1][m-1] = grid[n-1][m-1];
        
        if(dp[n-1][m-1] > 0) dp[n-1][m-1] = 0;
        
        for(int i = n-1; i >= 0 ; i--){
            for(int j = m-1; j >= 0; j--){
                if(i == n-1 && j == m-1) continue;
                dp[i][j] = max(dp[i+1][j],dp[i][j+1]) + grid[i][j];
                if(dp[i][j] > 0) dp[i][j] = 0;
            }
        }
        return abs(dp[0][0]) + 1;
    }
    int calculateMinimumHP(vector<vector<int>>& grid) {
        int n = grid.size();
        int m = grid[0].size();
        return recur(n,m,grid);
    }
};
